
Leds1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002e8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000033c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000036c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000029f5  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000275a  00000000  00000000  00002dc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000052e  00000000  00000000  00005523  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00005a54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001c71  00000000  00000000  00005a94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000f7  00000000  00000000  00007705  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000077fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
   8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
   c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  10:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  14:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  18:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  1c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  20:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  24:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  28:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  2c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  30:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  34:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  38:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  3c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  40:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  44:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  48:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  4c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  50:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  54:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  58:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  5c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  60:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  64:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  68:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  6c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  70:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  74:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  78:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  7c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  80:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  84:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  88:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  8c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  90:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  94:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  98:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  9c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  a0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  a4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  a8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  ac:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  b0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  b4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  b8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  bc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  c0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  c4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  c8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  cc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  d0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  d4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  d8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  dc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  e0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  e4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  e8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  ec:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  f0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  f4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  f8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
  fc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 100:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 104:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 108:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 10c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 110:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 114:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 118:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 11c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 120:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 124:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 128:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 12c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 130:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 134:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 138:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 13c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 140:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 144:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 148:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 14c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 150:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 154:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 158:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 15c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 160:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 164:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 168:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 16c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 170:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 174:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 178:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 17c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 180:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 184:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 188:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 18c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 190:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 194:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 198:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 19c:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1a0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1a4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1a8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1ac:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1b0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1b4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1b8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1bc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1c0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1c4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1c8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1cc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1d0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1d4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1d8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1dc:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1e0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1e4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1e8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1ec:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1f0:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1f4:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>
 1f8:	0c 94 08 01 	jmp	0x210	; 0x210 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	d7 e2       	ldi	r29, 0x27	; 39
 206:	de bf       	out	0x3e, r29	; 62
 208:	0e 94 2a 01 	call	0x254	; 0x254 <main>
 20c:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <_exit>

00000210 <__bad_interrupt>:
 210:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000214 <_Z4movem>:

#include <avr/io.h>
#include <util/delay.h>

void move(uint32_t leds)
{
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
	PORTA_OUT = leds;
 218:	60 93 04 06 	sts	0x0604, r22	; 0x800604 <__TEXT_REGION_LENGTH__+0x7fb604>
	PORTB_OUT = leds >> 8;
 21c:	07 2f       	mov	r16, r23
 21e:	18 2f       	mov	r17, r24
 220:	29 2f       	mov	r18, r25
 222:	33 27       	eor	r19, r19
 224:	00 93 24 06 	sts	0x0624, r16	; 0x800624 <__TEXT_REGION_LENGTH__+0x7fb624>
	PORTC_OUT = leds >> 12;
 228:	dc 01       	movw	r26, r24
 22a:	cb 01       	movw	r24, r22
 22c:	07 2e       	mov	r0, r23
 22e:	7c e0       	ldi	r23, 0x0C	; 12
 230:	b6 95       	lsr	r27
 232:	a7 95       	ror	r26
 234:	97 95       	ror	r25
 236:	87 95       	ror	r24
 238:	7a 95       	dec	r23
 23a:	d1 f7       	brne	.-12     	; 0x230 <_Z4movem+0x1c>
 23c:	70 2d       	mov	r23, r0
 23e:	80 93 44 06 	sts	0x0644, r24	; 0x800644 <__TEXT_REGION_LENGTH__+0x7fb644>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 242:	8f e4       	ldi	r24, 0x4F	; 79
 244:	93 ec       	ldi	r25, 0xC3	; 195
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <_Z4movem+0x32>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <_Z4movem+0x38>
 24c:	00 00       	nop
	_delay_ms(200);
}
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	08 95       	ret

00000254 <main>:

int main(void)
{
	PORTA_DIR = 0xFF;
 254:	8f ef       	ldi	r24, 0xFF	; 255
 256:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7fb600>
	PORTB_DIR = 0x0F;
 25a:	9f e0       	ldi	r25, 0x0F	; 15
 25c:	90 93 20 06 	sts	0x0620, r25	; 0x800620 <__TEXT_REGION_LENGTH__+0x7fb620>
	PORTC_DIR = 0xFF;
 260:	80 93 40 06 	sts	0x0640, r24	; 0x800640 <__TEXT_REGION_LENGTH__+0x7fb640>
	uint32_t led = 1;
	uint32_t dir = 1;
 264:	81 2c       	mov	r8, r1
 266:	91 2c       	mov	r9, r1
 268:	54 01       	movw	r10, r8
 26a:	83 94       	inc	r8
int main(void)
{
	PORTA_DIR = 0xFF;
	PORTB_DIR = 0x0F;
	PORTC_DIR = 0xFF;
	uint32_t led = 1;
 26c:	c1 2c       	mov	r12, r1
 26e:	d1 2c       	mov	r13, r1
 270:	76 01       	movw	r14, r12
 272:	c3 94       	inc	r12
 274:	0d c0       	rjmp	.+26     	; 0x290 <main+0x3c>
		move(led);
		
		if(led < maxbit && dir)
		{
			led <<= 1;
			if(led == maxbit) dir = 0;
 276:	81 2c       	mov	r8, r1
 278:	91 2c       	mov	r9, r1
 27a:	54 01       	movw	r10, r8
 27c:	09 c0       	rjmp	.+18     	; 0x290 <main+0x3c>
		{
			led >>= 1;
		}
		else
		{
			dir = 1;
 27e:	81 2c       	mov	r8, r1
 280:	91 2c       	mov	r9, r1
 282:	54 01       	movw	r10, r8
 284:	83 94       	inc	r8
 286:	04 c0       	rjmp	.+8      	; 0x290 <main+0x3c>
 288:	81 2c       	mov	r8, r1
 28a:	91 2c       	mov	r9, r1
 28c:	54 01       	movw	r10, r8
 28e:	83 94       	inc	r8
	uint32_t maxbit = 1;
	maxbit <<= 19;

    while (1) 
    {
		move(led);
 290:	c7 01       	movw	r24, r14
 292:	b6 01       	movw	r22, r12
 294:	0e 94 0a 01 	call	0x214	; 0x214 <_Z4movem>
		
		if(led < maxbit && dir)
 298:	c1 14       	cp	r12, r1
 29a:	d1 04       	cpc	r13, r1
 29c:	88 e0       	ldi	r24, 0x08	; 8
 29e:	e8 06       	cpc	r14, r24
 2a0:	f1 04       	cpc	r15, r1
 2a2:	80 f4       	brcc	.+32     	; 0x2c4 <main+0x70>
 2a4:	81 14       	cp	r8, r1
 2a6:	91 04       	cpc	r9, r1
 2a8:	a1 04       	cpc	r10, r1
 2aa:	b1 04       	cpc	r11, r1
 2ac:	59 f0       	breq	.+22     	; 0x2c4 <main+0x70>
		{
			led <<= 1;
 2ae:	cc 0c       	add	r12, r12
 2b0:	dd 1c       	adc	r13, r13
 2b2:	ee 1c       	adc	r14, r14
 2b4:	ff 1c       	adc	r15, r15
			if(led == maxbit) dir = 0;
 2b6:	c1 14       	cp	r12, r1
 2b8:	d1 04       	cpc	r13, r1
 2ba:	88 e0       	ldi	r24, 0x08	; 8
 2bc:	e8 06       	cpc	r14, r24
 2be:	f1 04       	cpc	r15, r1
 2c0:	39 f7       	brne	.-50     	; 0x290 <main+0x3c>
 2c2:	d9 cf       	rjmp	.-78     	; 0x276 <main+0x22>
		}
		else if(led > 1 && !dir)
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	c8 16       	cp	r12, r24
 2c8:	d1 04       	cpc	r13, r1
 2ca:	e1 04       	cpc	r14, r1
 2cc:	f1 04       	cpc	r15, r1
 2ce:	b8 f2       	brcs	.-82     	; 0x27e <main+0x2a>
 2d0:	81 14       	cp	r8, r1
 2d2:	91 04       	cpc	r9, r1
 2d4:	a1 04       	cpc	r10, r1
 2d6:	b1 04       	cpc	r11, r1
 2d8:	b9 f6       	brne	.-82     	; 0x288 <main+0x34>
		{
			led >>= 1;
 2da:	f6 94       	lsr	r15
 2dc:	e7 94       	ror	r14
 2de:	d7 94       	ror	r13
 2e0:	c7 94       	ror	r12
 2e2:	d6 cf       	rjmp	.-84     	; 0x290 <main+0x3c>

000002e4 <_exit>:
 2e4:	f8 94       	cli

000002e6 <__stop_program>:
 2e6:	ff cf       	rjmp	.-2      	; 0x2e6 <__stop_program>
